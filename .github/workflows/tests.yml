name: Unit and E2E Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_DEVFEST_TOKYO_2025_TARGET_ENV: DEV

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  e2e_tests:
    runs-on: ubuntu-latest
    env:
      # E2E tests are configured to run against DEV data.
      NEXT_PUBLIC_DEVFEST_TOKYO_2025_TARGET_ENV: DEV

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Use Playwright Action to streamline browser installation and test execution
      - name: Install Playwright and Run Tests
        uses: microsoft/playwright-github-action@v1
        with:
          # Command to start the server
          run-start: npm run dev:e2e
          # Test execution command (default is npx playwright test)
          run-test: npx playwright test
          # Upload trace files as Artifacts on failure
          upload-artifact: true

  build_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build content from Markdown
        run:
          NEXT_PUBLIC_DEVFEST_TOKYO_2025_TARGET_ENV=PROD npm run build:content

      - name: Run build for PROD environment
        run: NEXT_PUBLIC_DEVFEST_TOKYO_2025_TARGET_ENV=PROD npm run build
